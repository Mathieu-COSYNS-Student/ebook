# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019 Olivier Bonaventure
# This file is distributed under the same license as the Computer networking
# : Principles, Protocols and Practice package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Computer networking : Principles, Protocols and Practice "
"3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-09 12:39+0000\n"
"PO-Revision-Date: 2021-03-04 19:15+0000\n"
"Last-Translator: Philippe D <philippe.dan@student.uclouvain.be>\n"
"Language-Team: French <http://weblate.info.ucl.ac.be/projects/cnp3-ebook/"
"principlesreferencemodels/fr/>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 3.9.1\n"
"Generated-By: Babel 2.7.0\n"

#: ../../principles/referencemodels.rst:8
msgid ""
"This is an unpolished draft of the third edition of this e-book. If you "
"find any error or have suggestions to improve the text, please create an "
"issue via https://github.com/CNP3/ebook/issues?milestone=3 or help us by "
"providing pull requests to close the existing issues."
msgstr ""
"Ceci est une ébauche non révisée de la troisième édition de cet e-book. Si "
"vous trouvez une quelconque erreur ou avez des suggestions pour améliorer ce "
"texte, n'hésitez pas à envoyer une issue via https://github.com/CNP3/ebook/"
"issues?milestone=3 ou aidez-nous en fournissant une pull request afin de "
"clore les issues existantes."

#: ../../principles/referencemodels.rst:12
msgid "The reference models"
msgstr ""

#: ../../principles/referencemodels.rst:14
msgid ""
"Given the growing complexity of computer networks, during the 1970s "
"network researchers proposed various reference models to facilitate the "
"description of network protocols and services. Of these, the Open Systems"
" Interconnection (OSI) model [Zimmermann80]_ was probably the most "
"influential. It served as the basis for the standardization work "
"performed within the :term:`ISO` to develop global computer network "
"standards. The reference model that we use in this book can be considered"
" as a simplified version of the OSI reference model [#fiso-tcp]_."
msgstr ""

#: ../../principles/referencemodels.rst:19
msgid "The five layers reference model"
msgstr ""

#: ../../principles/referencemodels.rst:21
msgid ""
"Our reference model is divided into five layers, as shown in the figure "
"below."
msgstr ""

#: ../../principles/referencemodels.rst:27
msgid "The five layers of the reference model"
msgstr ""

#: ../../principles/referencemodels.rst:32
#: ../../principles/referencemodels.rst:49
msgid "The Physical layer"
msgstr "La couche physique"

#: ../../principles/referencemodels.rst:34
msgid ""
"Starting from the bottom, the first layer is the Physical layer. Two "
"communicating devices are linked through a physical medium. This physical"
" medium is used to transfer an electrical or optical signal between two "
"directly connected devices."
msgstr ""

#: ../../principles/referencemodels.rst:36
msgid ""
"An important point to note about the Physical layer is the service that "
"it provides. This service is usually an unreliable connection-oriented "
"service that allows the users of the Physical layer to exchange bits. The"
" unit of information transfer in the Physical layer is the bit. The "
"Physical layer service is unreliable because :"
msgstr ""

#: ../../principles/referencemodels.rst:38
msgid ""
"the Physical layer may change, e.g. due to electromagnetic interference, "
"the value of a bit being transmitted"
msgstr ""

#: ../../principles/referencemodels.rst:39
msgid ""
"the Physical layer may deliver `more` bits to the receiver than the bits "
"sent by the sender"
msgstr ""

#: ../../principles/referencemodels.rst:40
msgid ""
"the Physical layer may deliver `fewer` bits to the receiver than the bits"
" sent by the sender"
msgstr ""

#: ../../principles/referencemodels.rst:54
#: ../../principles/referencemodels.rst:65
msgid "The Datalink layer"
msgstr ""

#: ../../principles/referencemodels.rst:56
msgid ""
"The `Datalink layer` builds on the service provided by the underlying "
"physical layer. The `Datalink layer` allows two hosts that are directly "
"connected through the physical layer to exchange information. The unit of"
" information exchanged between two entities in the `Datalink layer` is a "
"frame. A frame is a finite sequence of bits. Some `Datalink layers` use "
"variable-length frames while others only use fixed-length frames. Some "
"`Datalink layers` provide a connection-oriented service while others "
"provide a connectionless service. Some `Datalink layers` provide reliable"
" delivery while others do not guarantee the correct delivery of the "
"information."
msgstr ""

#: ../../principles/referencemodels.rst:58
msgid ""
"An important point to note about the `Datalink layer` is that although "
"the figure below indicates that two entities of the `Datalink layer` "
"exchange frames directly, in reality this is slightly different. When the"
" `Datalink layer` entity on the left needs to transmit a frame, it issues"
" as many `Data.request` primitives to the underlying `physical layer` as "
"there are bits in the frame. The physical layer will then convert the "
"sequence of bits in an electromagnetic or optical signal that will be "
"sent over the physical medium. The `physical layer` on the right hand "
"side of the figure will decode the received signal, recover the bits and "
"issue the corresponding `Data.indication` primitives to its `Datalink "
"layer` entity. If there are no transmission errors, this entity will "
"receive the frame sent earlier."
msgstr ""

#: ../../principles/referencemodels.rst:69
msgid "The Network layer"
msgstr ""

#: ../../principles/referencemodels.rst:73
msgid ""
"The `Datalink layer` allows directly connected hosts to exchange "
"information, but it is often necessary to exchange information between "
"hosts that are not attached to the same physical medium. This is the task"
" of the `network layer`. The `network layer` is built above the `datalink"
" layer`. Network layer entities exchange `packets`. A `packet` is a "
"finite sequence of bytes that is transported by the datalink layer inside"
" one or more frames. A packet usually contains information about its "
"origin and its destination, and usually passes through several "
"intermediate devices called routers on its way from its origin to its "
"destination."
msgstr ""

#: ../../principles/referencemodels.rst:80
msgid "The network layer"
msgstr ""

#: ../../principles/referencemodels.rst:85
msgid "The Transport layer"
msgstr ""

#: ../../principles/referencemodels.rst:87
msgid ""
"Most realizations of the network layer, including the internet, do not "
"provide a reliable service. However, many applications need to exchange "
"information reliably and so using the network layer service directly "
"would be very difficult for them. Ensuring the reliable delivery of the "
"data produced by applications is the task of the `transport layer`. "
"`Transport layer` entities exchange `segments`. A segment is a finite "
"sequence of bytes that are transported inside one or more packets. A "
"transport layer entity issues segments (or sometimes part of segments) as"
" `Data.request` to the underlying network layer entity."
msgstr ""

#: ../../principles/referencemodels.rst:89
msgid ""
"There are different types of transport layers. The most widely used "
"transport layers on the Internet are :term:`TCP` ,that provides a "
"reliable connection-oriented bytestream transport service, and "
":term:`UDP` ,that provides an unreliable connection-less transport "
"service."
msgstr ""

#: ../../principles/referencemodels.rst:96
msgid "The transport layer"
msgstr ""

#: ../../principles/referencemodels.rst:99
#: ../../principles/referencemodels.rst:109
msgid "The Application layer"
msgstr ""

#: ../../principles/referencemodels.rst:103
msgid ""
"The upper layer of our architecture is the `Application layer`. This "
"layer includes all the mechanisms and data structures that are necessary "
"for the applications. We will use Application Data Unit (ADU) or the "
"generic Service Data Unit (SDU) term to indicate the data exchanged "
"between two entities of the Application layer."
msgstr ""

#: ../../principles/referencemodels.rst:114
msgid ""
"In the remaining chapters of this text, we will often refer to the "
"information exchanged between entities located in different layers. To "
"avoid any confusion, we will stick to the terminology defined earlier, "
"i.e. :"
msgstr ""

#: ../../principles/referencemodels.rst:116
msgid "physical layer entities exchange bits"
msgstr ""

#: ../../principles/referencemodels.rst:117
msgid "datalink layer entities exchange *frames*"
msgstr ""

#: ../../principles/referencemodels.rst:118
msgid "network layer entities exchange *packets*"
msgstr ""

#: ../../principles/referencemodels.rst:119
msgid "transport layer entities exchange *segments*"
msgstr ""

#: ../../principles/referencemodels.rst:120
msgid "application layer entities exchange *SDUs*"
msgstr ""

#: ../../principles/referencemodels.rst:125
msgid "Reference models"
msgstr ""

#: ../../principles/referencemodels.rst:128
msgid ""
"Two reference models have been successful in the networking community : "
"the OSI reference model and the TCP/IP reference model. We discuss them "
"briefly in this section."
msgstr ""

#: ../../principles/referencemodels.rst:132
msgid "The TCP/IP reference model"
msgstr ""

#: ../../principles/referencemodels.rst:134
msgid ""
"In contrast with OSI, the TCP/IP community did not spend a lot of effort "
"defining a detailed reference model; in fact, the goals of the Internet "
"architecture were only documented after TCP/IP had been deployed "
"[Clark88]_. :rfc:`1122` , which defines the requirements for Internet "
"hosts, mentions four different layers. Starting from the top, these are :"
msgstr ""

#: ../../principles/referencemodels.rst:136
msgid "the Application layer"
msgstr ""

#: ../../principles/referencemodels.rst:137
msgid "the Transport layer"
msgstr ""

#: ../../principles/referencemodels.rst:138
msgid ""
"the Internet layer which is equivalent to the network layer of our "
"reference model"
msgstr ""

#: ../../principles/referencemodels.rst:139
msgid ""
"the Link layer which combines the functions of the physical and datalink "
"layers of our five-layer reference model"
msgstr ""

#: ../../principles/referencemodels.rst:141
msgid ""
"Besides this difference in the lower layers, the TCP/IP reference model "
"is very close to the five layers that we use throughout this document."
msgstr ""

#: ../../principles/referencemodels.rst:146
msgid "The OSI reference model"
msgstr ""

#: ../../principles/referencemodels.rst:148
msgid ""
"Compared to the five layers reference model explained above, the "
":term:`OSI` reference model defined in [X200]_ is divided in seven "
"layers. The four lower layers are similar to the four lower layers "
"described above. The OSI reference model refined the application layer by"
" dividing it in three layers :"
msgstr ""

#: ../../principles/referencemodels.rst:150
msgid ""
"the `Session layer`. The Session layer contains the protocols and "
"mechanisms that are necessary to organize and to synchronize the dialogue"
" and to manage the data exchange of presentation layer entities. While "
"one of the main functions of the transport layer is to cope with the "
"unreliability of the network layer, the session's layer objective is to "
"hide the possible failures of transport-level connections to the upper "
"layer higher. For this, the Session Layer provides services that allow to"
" establish a session-connection, to support orderly data exchange "
"(including mechanisms that allow to recover from the abrupt release of an"
" underlying transport connection), and to release the connection in an "
"orderly manner."
msgstr ""

#: ../../principles/referencemodels.rst:151
msgid ""
"the `Presentation layer` was designed to cope with the different ways of "
"representing information on computers. There are many differences in the "
"way computer store information. Some computers store integers as 32 bits "
"field, others use 64 bits field and the same problem arises with floating"
" point number. For textual information, this is even more complex with "
"the many different character codes that have been used [#funicode]_. The "
"situation is even more complex when considering the exchange of "
"structured information such as database records. To solve this problem, "
"the Presentation layer contains provides for a common representation of "
"the data transferred. The :term:`ASN.1` notation was designed for the "
"Presentation layer and is still used today by some protocols."
msgstr ""

#: ../../principles/referencemodels.rst:152
msgid ""
"the `Application layer` that contains the mechanisms that do not fit in "
"neither the Presentation nor the Session layer. The OSI Application layer"
" was itself further divided in several generic service elements."
msgstr ""

#: ../../principles/referencemodels.rst:158
msgid "The seven layers of the OSI reference model"
msgstr ""

#: ../../principles/referencemodels.rst:162
msgid "Footnotes"
msgstr "Notes de bas de page"

#: ../../principles/referencemodels.rst:163
msgid ""
"There is now a rough consensus for the greater use of the Unicode_ "
"character format. Unicode can represent more than 100,000 different "
"characters from the known written languages on Earth. Maybe one day, all "
"computers will only use Unicode to represent all their stored characters "
"and Unicode could become the standard format to exchange characters, but "
"we are not yet at this stage today."
msgstr ""

#: ../../principles/referencemodels.rst:165
msgid ""
"An interesting historical discussion of the OSI-TCP/IP debate may be "
"found in [Russel06]_"
msgstr ""
